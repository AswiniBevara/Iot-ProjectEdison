{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "geo-paired-region": {
            "type": "string",
            "defaultValue": "EastUS2",
            "allowedValues": [
                "EastUS2",
                "CentralUS",
                "WestUS2",
                "WestCentralUS",
                "CanadaCentral",
                "CanadaEast",
                "AustraliaEast",
                "AustraliaSouthEast",
                "CentralIndia",
                "SouthIndia",
                "EastAsia",
                "SouthEastAsia",
                "JapanWest",
                "JapanEast",
                "KoreaCentral",
                "KoreaSouth",
                "UKSouth",
                "UKWest"
            ],
            "metadata": {
                "description": "For Basic solution select the geopaired region as deployment region.If solution type is choosen as standard and premium, enter location for geo-paired-region, for more information about the geo-paired-region navigate to section 4 in the Getting Started Document(https://github.com/sysgain/MSIotDeviceManagement/blob/master/MSIotDeviceManagement-wiki/GettingStarted.md)"
            }
        },
        "solutionType": {
            "type": "string",
            "defaultValue": "Project-Edison",
            "metadata": {
                "description": "The type of the solution"
            }
        },
        "acrDeploymentLocation": {
            "type": "string",
            "defaultValue": "CentralUS",
            "allowedValues": [
                "JapanEast",
                "JapanWest",
                "AustraliaSouthEast",
                "AustraliaEast",
                "CanadaCentral",
                "CanadaEast",
                "CentralIndia",
                "SouthIndia",
                "CentralUS",
                "EastUS2",
                "SouthEastAsia",
                "EastAsia",
                "WestCentralUS",
                "WestUS2"
            ],
            "metadata": {
                "description": "Choose location for Azure container Registry to deploy."
            }
        },
        "signalRlocation": {
            "type": "string",
            "defaultValue": "centralus",
            "allowedValues": [
                "eastus2",
                "centralus"
            ],
            "metadata": {
                "description": "Choose location for signalR to deploy."
            }
        },
        "appInsightsLocationDr": {
            "type": "string",
            "defaultValue": "eastus",
            "allowedValues": [
                "southcentralus",
                "westeurope",
                "eastus",
                "North Europe"
            ],
            "metadata": {
                "description": "Enter location for application insights for disaster recovery"
            }
        },
        "omsWorkspaceRegion": {
            "type": "string",
            "defaultValue": "southeastasia",
            "allowedValues": [
                "australiasoutheast",
                "canadacentral",
                "centralindia",
                "eastus",
                "japaneast",
                "southeastasia",
                "uksouth",
                "westeurope"
            ],
            "metadata": {
                "description": "Choose location for OMS Log Analytics to deploy. For more information, see https://docs.microsoft.com/en-us/azure/log-analytics/log-analytics-overview"
            }
        },
        "aksServicePrincipalClientIdDr": {
            "type": "string",
            "metadata": {
                "description": "Client ID of the service principal."
            }
        },
        "aksServicePrincipalClientSecretDr": {
            "type": "string",
            "metadata": {
                "description": "ClientSecret of the service principal."
            }
        },
        "signalrCapacity": {
            "type": "int",
            "defaultValue": 1,
            "allowedValues": [
                1,
                2,
                5,
                10,
                20,
                50,
                100
            ],
            "metadata": {
                "description": "The number of SignalR Unit."
            }
        }
    },
    "variables": {
        "omsSettings": {
            "solutionType": "[parameters('solutionType')]",
            "omsWorkspaceNameDr": "[concat('omsworkspace', variables('suffix'),'Dr')]",
            "omsWorkspaceRegion": "[parameters('omsWorkspaceRegion')]",
            "omsLogAnalyticsSku": "standalone",
            "dataRetention": 7
        },
         "storageBlobSettings": {
            "solutionType": "[parameters('solutionType')]",
            "storageAccountNameDr": "[variables('storageAccountNameDr')]",
            "locationDr": "[variables('locationDr')]",
            "containerName": "logsdr",
            "storageAccountType": "Standard_LRS"
        },
        "notificationHub": {
            "locationDr": "[variables('locationDr')]",
            "skuName": "free",
            "namespaceType": "NotificationHub",
            "notificationHubNamespaceNameDr": "[concat('NotificationHubNS', variables('suffix'),'Dr')]",
            "notificationHubNameDr": "[concat('NotificationHub', variables('suffix'), 'Dr')]",
            "solutionType": "[parameters('solutionType')]"
        },
        "signalrSettings": {
            "solutionType": "[parameters('solutionType')]",
            "locationDr": "[variables('signalRlocationDr')]",
            "signalrNameDr": "[concat('signalR',variables('suffix'),'Dr')]",
            "pricingTier2": "Standard_S1",
            "capacity": "[parameters('signalrCapacity')]"
        },
        "kubernetesSettings": {
            "solutionType": "[parameters('solutionType')]",
            "locationDr": "[variables('locationDr')]",
            "enableHttpApplicationRouting": true,
            "aksServicePrincipalClientIdDr": "[parameters('aksServicePrincipalClientIdDr')]",
            "aksServicePrincipalClientSecretDr": "[parameters('aksServicePrincipalClientSecretDr')]",
            "aksClusterNameDr": "[variables('aksClusterNameDr')]",
            "kubernetesVersion": "1.12.5",
            "aksEnableRBAC": false,
            "aksDnsPrefixDr": "clusterdnsDr",
            "aksAgentOsDiskSizeGB": 30,
            "aksAgentCount": 3,
            "aksAgentVMSize": "Standard_B2s",
            "osType": "Linux",
            "networkPlugin": "kubenet",
            "aksServiceCIDRDr": "10.0.0.0/24",
            "aksDnsServiceIPDr": "10.0.0.20",
            "aksDockerBridgeCIDRDr": "172.18.0.1/16",
            "aksClusterId": "[resourceId('Microsoft.ContainerService/managedClusters', variables('aksClusterNameDr'))]"
        },
        "redisSettings": {
            "solutionType": "[parameters('solutionType')]",
            "location": "[parameters('geo-paired-region')]",
            "locationDr": "[variables('locationDr')]",
            "redisCacheNameDr": "[concat('redisCache',variables('suffix'),'Dr')]",
            "redisCacheCapacity": 1,
            "redisCacheFamily": "C",
            "redisCacheSku": "Basic",
            "enableNonSslPort": false,
            "diagnosticsEnabled": true
        },
        "acrSettings": {
            "solutionType": "[parameters('solutionType')]",
            "location": "[parameters('acrDeploymentLocation')]",
            "locationDr": "[variables('acrDeploymentLocationDr')]",
            "acrNameDr": "[variables('acrName2')]",
            "acrAdminUserEnabled": true,
            "acrSku": "Basic",
            "acrSku1": "Standard"
        },
        "botSettings": {
            "solutionType": "[parameters('solutionType')]",
            "insightsNameDr": "[variables('botId2')]",
            "botIdDr": "[variables('botId2')]",
            "appInsightsLocationDr": "[parameters('appInsightsLocationDr')]"
        },
        "suffix": "[substring(uniqueString(resourceGroup().id), 0, 5)]",
        "baseUrl": "https://raw.githubusercontent.com/sysgain/Iot-ProjectEdison/dev-kub-ha/",
        "EastUS2": "CentralUS",
        "CentralUS": "EastUS2",
        "WestUS2": "West Central US",
        "WestCentralUS": "WestUS2",
        "CanadaCentral": "CanadaEast",
        "CanadaEast": "CanadaCentral",
        "AustraliaEast": "AustraliaSouthEast",
        "AustraliaSouthEast": "AustraliaEast",
        "CentralIndia": "SouthIndia",
        "SouthIndia": "CentralIndia",
        "EastAsia": "SouthEastAsia",
        "SouthEastAsia": "EastAsia",
        "JapanWest": "JapanEast",
        "JapanEast": "JapanWest",
        "KoreaCentral": "KoreaSouth",
        "KoreaSouth": "KoreaCentral",
        "UKSouth": "UKWest",
        "UKWest": "UKSouth",
        "locationDr": "[variables(parameters('geo-paired-region'))]",
        "signalRlocationDr": "[variables(parameters('signalRlocation'))]",
        "aksClusterNameDr": "[concat('aks' , variables('suffix'), 'Dr')]",
        "storageAccountNameDr": "[concat('edisonstrgeacc',variables('suffix'),'dr')]",
        "acrName2": "[concat('acr',variables('suffix'), 'Dr')]",
        "acrDeploymentLocationDr": "[variables(parameters('acrDeploymentLocation'))]",
        "botId2": "[concat('edisonbot', variables('suffix'),'Dr')]"
    },
    "resources": [
        {
            "name": "OmsWorkSpaceR2",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "dependsOn": [],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'),'nested/oms-dr.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "omsSettings": {
                        "value": "[variables('omsSettings')]"
                    }
                }
            }
        },
        {
            "name": "StorageBlobR2",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-02-01",
            "dependsOn": [],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/storage-dr.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "storageBlobSettings": {
                        "value": "[variables('storageBlobSettings')]"
                    }
                }
            }
        },
        {
            "name": "NotificationHubR2",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-02-01",
            "dependsOn": [],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/notificationhub-r2.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "notificationHub": {
                        "value": "[variables('notificationHub')]"
                    }
                }
            }
        },
        {
            "name": "SignalR2",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "dependsOn": [],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'),'nested/signalR-r2.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "signalrSettings": {
                        "value": "[variables('signalrSettings')]"
                    }
                }
            }
        },
        {
            "name": "RediscacheR2",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-02-01",
            "dependsOn": [
                "StorageBlobR2"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/redisCache-r2.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "redisSettings": {
                        "value": "[variables('redisSettings')]"
                    },
                    "storageAccountName":{
                        "value": "[variables('storageAccountNameDr')]"
                    }
                }
            }
        },
        {
            "name": "AzureContainerRegistryR2",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "dependsOn": [],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'),'nested/acr-r2.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "acrSettings": {
                        "value": "[variables('acrSettings')]"
                    }
                }
            }
        },
        {
            "name": "KubernetesR2",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2017-05-10",
            "dependsOn": [
                "OmsWorkSpaceR2"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'),'nested/kubernetes-r2.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "omsSettings": {
                        "value": "[variables('omsSettings')]"
                    },
                    "kubernetesSettings": {
                        "value": "[variables('kubernetesSettings')]"
                    }
                }
            }
        },
        {
            "name": "AppInsights",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2017-05-10",
            "dependsOn": [],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'),'nested/app-insights-r2.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "botSettings": {
                        "value": "[variables('botSettings')]"
                    }
                }
            }
        }
    ],
    "outputs": {}
}