{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "eastus"
        },
        "tenantId": {
            "type": "string",
            "metadata": {
                "description": "TenantId of the created Azure active directory application. For instructions, see  (https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-howto-tenant) in the Microsoft documentation"
            }
        },
        "azureAccountName": {
            "type": "string",
            "defaultValue": ""
        },
        "azurePassword": {
            "type": "securestring",
            "defaultValue": ""
        },
        "sessionId":{
            "type": "string",
            "defaultValue": ""
       },
       "cosmosdbModuleUri":{
            "type": "string",
            "defaultValue": "https://github.com/ChaitanyaGeddam/edison/raw/master/scripts/cosmos.zip"
       },
       "osDiskSizeGB": {
        "defaultValue": 30,
        "minValue": 30,
        "maxValue": 1023,
        "type": "int",
        "metadata": {
            "description": "Disk size (in GB) to provision for each of the agent pool nodes. This value ranges from 0 to 1023. Specifying 0 will apply the default disk size for that agentVMSize."
        }
    },
    "agentCount": {
        "defaultValue": 1,
        "minValue": 1,
        "maxValue": 50,
        "type": "int",
        "metadata": {
            "description": "The number of agent nodes for the cluster."
        }
    },
    "servicePrincipalClientId": {
        "type": "securestring",
        "metadata": {
            "description": "Client ID (used by cloudprovider)"
        }
    },
    "servicePrincipalClientSecret": {
        "type": "securestring",
        "metadata": {
            "description": "The Service Principal Client Secret."
        }
    },
    "omsWorkspaceRegion": {
        "type": "string",
        "defaultValue": "southeastasia",
        "allowedValues": [
            "australiasoutheast",
            "canadacentral",
            "centralindia",
            "eastus",
            "japaneast",
            "southeastasia",
            "uksouth",
            "westeurope"
        ],
        "metadata": {
            "description": "Choose location for OMS Log Analytics to deploy. For more information, see https://docs.microsoft.com/en-us/azure/log-analytics/log-analytics-overview"
        }
    },
    "enableHttpApplicationRouting": {
        "defaultValue": true,
        "type": "bool",
        "metadata": {
            "description": "boolean flag to turn on and off of http application routing"
        }
    },
    "enableRBAC": {
        "defaultValue": true,
        "type": "bool",
        "metadata": {
            "description": "boolean flag to turn on and off of RBAC"
        }
    },
    "webAdminPackageUri":{
        "type": "string",
        "defaultValue": "https://github.com/ChaitanyaGeddam/edison/raw/master/code/Edison.AdminPortal.zip"
    },
    "clientId":{
        "type": "string",
        "metadata": {
            "description": "Azure AD clientID"
        }
    },
    "domain":{
        "type": "string",
        "metadata": {
            "description": "Azure AD Domain name"
        }
    },
    "adTenantId":{
        "type": "string",
        "metadata": {
            "description": "Azure AD TenantID"
        }
    },
    "azureAdB2CClientId":{
        "type": "string",
        "metadata": {
            "description": "Azure AD B2C clientId"
        }
    },
    "azureAdB2CDomain":{
        "type": "string",
        "metadata": {
            "description": "Azure AD B2C Domain name"
        }
    },
    "signUpSignInPolicyId":{
        "type": "string",
        "metadata": {
            "description": "Azure AD B2C SignUp SignIn PolicyId"
        }
    }
    },

    "variables": {
        "notificationHub": {
            "location": "[parameters('location')]",
            "skuName": "free",
            "namespaceType": "NotificationHub",
            "notificationHubNamespaceName": "[concat('NotificationHubNS', variables('suffix'))]",
            "notificationHubName": "[concat('NotificationHub', variables('suffix'))]"
        },
        "cosmosDbSettings": {
            "cosmosDbAccountName": "[concat('edisondbacc',variables('suffix'))]",
            "location": "[parameters('location')]",
            "offerType": "Standard",
            "cosmosDbName":"Edison",
            "cosmosCollEventCluster":"EventClusters",
            "cosmosCollResponses":"Responses",
            "cosmosCollDevices":"Devices",
            "cosmosCollActionPlans":"ActionPlans",
            "cosmosCollNotifications":"Notifications"
        },
        "automationSettings": {
            "automationAccountName": "[concat('AutomationAcc', variables('suffix'))]",
            "automationLocation": "eastus2",
            "automationSku": "Free",
            "runbookName": "container",
            "moduleName": "CosmosDB",
            "cosmosdbModuleUri": "[parameters('cosmosdbModuleUri')]",
            "runbookUri": "[concat(variables('baseUrl'),'/scripts/initializeCosmosDb.ps1?token=AT7l1dkY3iZnOHcC_P3KKcf4CR4n_1MEks5cG4QfwA%3D%3D')]",
            "sessionId": "[parameters('sessionId')]",
            "tenantId": "[parameters('tenantId')]",
            "azureAccountName": "[parameters('azureAccountName')]",
            "azurePassword": "[parameters('azurePassword')]"
        },
        "storageBlobSettings": {
            "storageAccountName": "[concat('edisonstrgeacc',variables('suffix'))]",
            "location": "[parameters('location')]",
            "containerName": "logs",
            "storageAccountType": "Standard_LRS"
        },
        "iothubSettings": {
            "location": "[parameters('location')]",
            "iotHubName": "[concat('edisonhub',variables('suffix'))]",
            "d2cMessageRetentionInDaysPeriod": 1,
            "d2cPartitionCount": 2,
            "skuName": "S1",
            "capacityUnits": 1,
            "d2cConsumerGroupName": "cg1"
        },
        "webSiteSettings": {
            "webAppHostingPlanName": "[concat('edisonwebplan',variables('suffix'))]",
            "location": "WestUS",
            "webAppSkuName1": "F1",
            "webAPI": "[concat('edisonWebAPI',variables('suffix'))]",
            "webApiPackageuri": "",
            "webAdminPackageUri":"[parameters('webAdminPackageUri')]",
            "webAdmin": "[concat('edisonWebAdmin',variables('suffix'))]"
        },
        "omsSettings": {
            "omsWorkspaceName": "[concat('omsworkspace', variables('suffix'))]",
            "omsWorkspaceRegion": "[parameters('omsWorkspaceRegion')]",
            "omsLogAnalyticsSku": "standalone",
            "dataRetention": 7
        },
        "kubernetesSettings": {
            "servicename": "[concat('kubernetes', variables('suffix'))]",
            "kubernetesVersion": "1.11.5",
            "location": "[parameters('location')]",
            "enableRBAC": "[parameters('enableRBAC')]",
            "dnsPrefix":  "clusterdns",
            "enableHttpApplicationRouting": "[parameters('enableHttpApplicationRouting')]",
            "osType": "Linux",
            "agentVMSize": "Standard_D2_v2",
            "agentCount": "[parameters('agentCount')]",
            "servicePrincipalClientId": "[parameters('servicePrincipalClientId')]",
            "servicePrincipalClientSecret": "[parameters('servicePrincipalClientSecret')]",
            "networkPlugin": "kubenet",
            "osDiskSizeGB": "[parameters('osDiskSizeGB')]"
        },
        "azureAdSettings":{
            "clientId":"[parameters('clientId')]",
            "domain":"[parameters('domain')]",
            "tenantId":"[parameters('adTenantId')]"

        },
        "azureAdB2CWebSettings":{
            "clientId":"[parameters('azureAdB2CClientId')]",
            "domain":"[parameters('AzureAdB2CDomain')]",
            "signUpSignInPolicyId":"[parameters('SignUpSignInPolicyId')]"

        },
        "baseUrl": "https://raw.githubusercontent.com/sysgain/Iot-ProjectEdison/stage",
        "suffix": "[substring(uniqueString(resourceGroup().id), 0, 4)]"
    },
    "resources": [
        {
            "name": "NotificationHub",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-02-01",
            "dependsOn": [],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), '/nested/notification-hub.json?token=AT7l1RUFQAXSAkdF4Of7_5QU_nCUfwWwks5cG4IywA%3D%3D')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "notificationHub": {
                        "value": "[variables('notificationHub')]"
                    }
                }
            }
        },
        {
            "name": "Cosmosdb",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-02-01",
            "dependsOn": [
                "Kubernetes"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), '/nested/cosmosdb.json?token=AT7l1WTVbdNITZgYuSHvEFs6FBmXCyVUks5cG4J0wA%3D%3D')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "CosmosDbSettings": {
                        "value": "[variables('CosmosDbSettings')]"
                    }
                }
            }
        },
        {
            "name": "AutomationAccount",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-02-01",
            "dependsOn": [
                "Cosmosdb"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), '/nested/automation-account.json?token=AT7l1dzCD3XTU90Ly14HYXilBhE9baNXks5cG4KZwA%3D%3D')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "automationSettings": {
                        "value": "[variables('automationSettings')]"
                    },
                    "CosmosDbSettings":{
                        "value": "[variables('cosmosDbSettings')]"
                    }
                }
            }
        },
        {
            "name": "StorageBlob",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-02-01",
            "dependsOn": [
                "Kubernetes"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), '/nested/storageblob.json?token=AT7l1VvrOqDZROCVLrj_9ctz--PhOwSsks5cG4LHwA%3D%3D')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "storageBlobSettings": {
                        "value": "[variables('storageBlobSettings')]"
                    }
                }
            }
        },
        {
            "name": "IotHub",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-02-01",
            "dependsOn": [],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), '/nested/iothub.json?token=AT7l1fP1bkUBvl0HnH4sI2ur-wdZBAXBks5cG4M0wA%3D%3D')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "iotHubSettings": {
                        "value": "[variables('iotHubSettings')]"
                    }
                }
            }
        },
        {
            "name": "WebAPI",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-02-01",
            "dependsOn": [
                "Cosmosdb",
                "IotHub",
                "NotificationHub"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), '/nested/webapi-components.json?token=AT7l1R6TJYOCgHsu1SZrU5GgT_LVPzNeks5cG4NYwA%3D%3D')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "webSiteSettings": {
                        "value": "[variables('webSiteSettings')]"
                    },
                    "cosmosDbSettings":{
                        "value": "[variables('cosmosDbSettings')]"
                    },
                    "notificationHub":{
                        "value": "[variables('notificationHub')]"
                    },
                    "azureAdSettings":{
                        "value": "[variables('AzureAdSettings')]"
                    },
                    "azureAdB2CWebSettings":{
                        "value": "[variables('AzureAdB2CWebSettings')]"
                    }
                }
            }
        },
        {
            "name": "WebAdmin",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-02-01",
            "dependsOn": [
                "Cosmosdb",
                "IotHub",
                "NotificationHub"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), '/nested/webadmin.json?token=AT7l1TdVI4G0wzRWKQrbbO8kfWSCctZdks5cG4N-wA%3D%3D')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "webSiteSettings": {
                        "value": "[variables('webSiteSettings')]"
                    }
                }
            }
        },
        {
            "name": "Kubernetes",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "dependsOn":[
                "OmsWorkSpace",
                "IotHub"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'),'/nested/kubernetes.json?token=AT7l1akvQYgJSZFXzbtpnpirB4K7wOpgks5cG4ovwA%3D%3D')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "omsSettings": {
                        "value": "[variables('omsSettings')]"
                    },
                    "kubernetesSettings": {
                        "value": "[variables('kubernetesSettings')]"
                    }
                }
            }
        },
        {
            "name": "OmsWorkSpace",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
           "dependsOn": [],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'),'/nested/omsWorkspace.json?token=AT7l1SIu7ny3xvfcP4Tz2E6Gey_s-PBhks5cG4PCwA%3D%3D')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "omsSettings": {
                        "value": "[variables('omsSettings')]"
                    }
                }
            }
        }
    ]
}